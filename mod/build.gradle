plugins {
	id("maven-publish")
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this task, sources will not be generated.
	withSourcesJar()
}

/*
 * Gets the version name from the latest Git tag
 */

def getVersionName()
{
	def stdout = new ByteArrayOutputStream()
	exec {
		commandLine = ["git", "describe", "--tags", "--dirty"]
		standardOutput = stdout
	}
	return stdout.toString().trim()
}

archivesBaseName = project.archives_base_name
version = getVersionName()
group = project.maven_group as String

dependencies {
	implementation("com.google.code.findbugs:jsr305:3.0.2")

	//to change the versions see the gradle.properties file

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

	// CCA Base
	modImplementation("io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}")
	include("io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cca_version}")
	// CCA Entity
	modImplementation("io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cca_version}")
	include("io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cca_version}")

	// Cloth Config
	modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	include("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}")

	// Mod Menu
	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
}

processResources {
	inputs.property("version", project.version)

	from(sourceSets.main.resources.srcDirs) {
		include("fabric.mod.json")
		expand(version: project.version)
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude("fabric.mod.json")
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy(remapJar)
			}
			artifact(sourcesJar) {
				builtBy(remapSourcesJar)
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
